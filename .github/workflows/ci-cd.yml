name: CI/CD Pipeline with EC2 Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ensure Docker is installed
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            if ! command -v docker &> /dev/null
            then
              echo "Docker not found, installing..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker $USER
              newgrp docker
            else
              echo "Docker is already installed"
            fi
          debug: true

      - name: Login to Docker Hub
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          debug: true

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/project2:latest
            echo "Pulling latest Docker image..."
            docker pull $DOCKER_IMAGE

            echo "Stopping and removing old container (if exists)..."
            docker stop myapp || true
            docker rm myapp || true

            echo "Running new container..."
            docker run -d --name myapp -p 80:3000 $DOCKER_IMAGE
          debug: true
